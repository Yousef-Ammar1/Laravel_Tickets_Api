openapi: 3.0.3
info:
  title: 'Ticket Management API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/login:
    post:
      summary: Login
      operationId: login
      description: "Auhtenticates th user and returns the user's API token."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    user:
                      id: 1
                      name: 'Flavie Adams'
                      email: rgottlieb@example.net
                      email_verified_at: '2024-08-20T13:04:22.000000Z'
                      is_manager: false
                      created_at: '2024-08-20T13:04:23.000000Z'
                      updated_at: '2024-08-20T13:04:23.000000Z'
                    token: '{YOUR_AUTH_KEY}'
                  message: Authenticated
                  'status ': 200
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'Flavie Adams'
                          email:
                            type: string
                            example: rgottlieb@example.net
                          email_verified_at:
                            type: string
                            example: '2024-08-20T13:04:22.000000Z'
                          is_manager:
                            type: boolean
                            example: false
                          created_at:
                            type: string
                            example: '2024-08-20T13:04:23.000000Z'
                          updated_at:
                            type: string
                            example: '2024-08-20T13:04:23.000000Z'
                      token:
                        type: string
                        example: '{YOUR_AUTH_KEY}'
                  message:
                    type: string
                    example: Authenticated
                  'status ':
                    type: integer
                    example: 200
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: osvaldo96@example.org
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'gk)u@/y0>z6x:s[J'
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: Logout
      operationId: logout
      description: "Signs out the user and destroy's the API token."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - Authentication
  '/api/v1/tickets/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Endpoints
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/tickets/{ticket}':
    put:
      summary: ''
      operationId: putApiV1TicketsTicket
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        title:
                          type: string
                          description: ''
                          example: amet
                        description:
                          type: string
                          description: ''
                          example: 'Sequi unde nam reprehenderit non reiciendis.'
                        status:
                          type: string
                          description: ''
                          example: H
                          enum:
                            - A
                            - C
                            - X
                            - H
                    relationships:
                      type: object
                      description: ''
                      example: []
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 2
    patch:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        title:
                          type: string
                          description: ''
                          example: nisi
                        description:
                          type: string
                          description: ''
                          example: 'Autem quae molestiae maxime nulla.'
                        status:
                          type: string
                          description: ''
                          example: X
                          enum:
                            - A
                            - C
                            - X
                            - H
                    relationships:
                      type: object
                      description: ''
                      example: []
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              properties:
                                id:
                                  type: string
                                  description: ''
                                  example: null
    parameters:
      -
        in: path
        name: ticket
        description: 'The ticket.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/users:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: user
                      id: 1
                      attributes:
                        name: 'Flavie Adams'
                        email: rgottlieb@example.net
                        isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/1'
                    -
                      type: user
                      id: 2
                      attributes:
                        name: 'Oscar Dickinson'
                        email: sammy91@example.org
                        isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/2'
                    -
                      type: user
                      id: 3
                      attributes:
                        name: 'Juvenal Sanford III'
                        email: kane29@example.com
                        isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/3'
                    -
                      type: user
                      id: 4
                      attributes:
                        name: 'Ashley Harris'
                        email: walton.treutel@example.net
                        isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/4'
                    -
                      type: user
                      id: 5
                      attributes:
                        name: 'Adah White'
                        email: nolan.kathleen@example.net
                        isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/5'
                    -
                      type: user
                      id: 6
                      attributes:
                        name: 'Syble Larson'
                        email: parisian.stephan@example.com
                        isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/6'
                    -
                      type: user
                      id: 7
                      attributes:
                        name: 'Neoma Feest'
                        email: antonette.feeney@example.net
                        isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/7'
                    -
                      type: user
                      id: 8
                      attributes:
                        name: 'Ned Kunze PhD'
                        email: lkautzer@example.com
                        isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/8'
                    -
                      type: user
                      id: 9
                      attributes:
                        name: 'Prof. Stephania Abbott MD'
                        email: wilmer61@example.com
                        isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/9'
                    -
                      type: user
                      id: 10
                      attributes:
                        name: 'Gilda Runte'
                        email: jordy.connelly@example.net
                        isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/10'
                    -
                      type: user
                      id: 11
                      attributes:
                        name: 'The Manager'
                        email: manager@manager.com
                        isManager: true
                        links:
                          self: 'http://localhost/api/v1/authors/11'
                  links:
                    first: 'http://localhost/api/v1/users?page=1'
                    last: 'http://localhost/api/v1/users?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/users?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/users'
                    per_page: 100
                    to: 11
                    total: 11
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: user
                        id: 1
                        attributes:
                          name: 'Flavie Adams'
                          email: rgottlieb@example.net
                          isManager: false
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      -
                        type: user
                        id: 2
                        attributes:
                          name: 'Oscar Dickinson'
                          email: sammy91@example.org
                          isManager: false
                          links:
                            self: 'http://localhost/api/v1/authors/2'
                      -
                        type: user
                        id: 3
                        attributes:
                          name: 'Juvenal Sanford III'
                          email: kane29@example.com
                          isManager: false
                          links:
                            self: 'http://localhost/api/v1/authors/3'
                      -
                        type: user
                        id: 4
                        attributes:
                          name: 'Ashley Harris'
                          email: walton.treutel@example.net
                          isManager: false
                          links:
                            self: 'http://localhost/api/v1/authors/4'
                      -
                        type: user
                        id: 5
                        attributes:
                          name: 'Adah White'
                          email: nolan.kathleen@example.net
                          isManager: false
                          links:
                            self: 'http://localhost/api/v1/authors/5'
                      -
                        type: user
                        id: 6
                        attributes:
                          name: 'Syble Larson'
                          email: parisian.stephan@example.com
                          isManager: false
                          links:
                            self: 'http://localhost/api/v1/authors/6'
                      -
                        type: user
                        id: 7
                        attributes:
                          name: 'Neoma Feest'
                          email: antonette.feeney@example.net
                          isManager: false
                          links:
                            self: 'http://localhost/api/v1/authors/7'
                      -
                        type: user
                        id: 8
                        attributes:
                          name: 'Ned Kunze PhD'
                          email: lkautzer@example.com
                          isManager: false
                          links:
                            self: 'http://localhost/api/v1/authors/8'
                      -
                        type: user
                        id: 9
                        attributes:
                          name: 'Prof. Stephania Abbott MD'
                          email: wilmer61@example.com
                          isManager: false
                          links:
                            self: 'http://localhost/api/v1/authors/9'
                      -
                        type: user
                        id: 10
                        attributes:
                          name: 'Gilda Runte'
                          email: jordy.connelly@example.net
                          isManager: false
                          links:
                            self: 'http://localhost/api/v1/authors/10'
                      -
                        type: user
                        id: 11
                        attributes:
                          name: 'The Manager'
                          email: manager@manager.com
                          isManager: true
                          links:
                            self: 'http://localhost/api/v1/authors/11'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: user
                        id:
                          type: integer
                          example: 1
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'Flavie Adams'
                            email:
                              type: string
                              example: rgottlieb@example.net
                            isManager:
                              type: boolean
                              example: false
                            links:
                              type: object
                              properties:
                                self:
                                  type: string
                                  example: 'http://localhost/api/v1/authors/1'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/users?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/users?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/users?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/users'
                      per_page:
                        type: integer
                        example: 100
                      to:
                        type: integer
                        example: 11
                      total:
                        type: integer
                        example: 11
      tags:
        - Endpoints
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        name:
                          type: string
                          description: ''
                          example: maiores
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: arodriguez@example.org
                        password:
                          type: string
                          description: ''
                          example: 'QKs7K7-:7~Glwr'
                        isManager:
                          type: boolean
                          description: ''
                          example: true
  '/api/v1/users/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 1
                    attributes:
                      name: 'Flavie Adams'
                      email: rgottlieb@example.net
                      isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/1'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 1
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Flavie Adams'
                          email:
                            type: string
                            example: rgottlieb@example.net
                          isManager:
                            type: boolean
                            example: false
                          links:
                            type: object
                            properties:
                              self:
                                type: string
                                example: 'http://localhost/api/v1/authors/1'
      tags:
        - Endpoints
    delete:
      summary: ''
      operationId: deleteApiV1UsersId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/users/{user}':
    put:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        name:
                          type: string
                          description: ''
                          example: similique
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: danny74@example.net
                        password:
                          type: string
                          description: ''
                          example: 'uRrMV#cw0pbF'
                        isManager:
                          type: boolean
                          description: ''
                          example: true
    patch:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        name:
                          type: string
                          description: ''
                          example: quam
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: schroeder.leola@example.org
                        passowrd:
                          type: string
                          description: ''
                          example: sint
                    relationships:
                      type: object
                      description: ''
                      example: []
                      properties:
                        isManager:
                          type: boolean
                          description: ''
                          example: false
    parameters:
      -
        in: path
        name: user
        description: 'The user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/authors:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
  '/api/v1/authors/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 1
                    attributes:
                      name: 'Flavie Adams'
                      email: rgottlieb@example.net
                      isManager: false
                      emailVerifiedAt: '2024-08-20T13:04:22.000000Z'
                      createdAt: '2024-08-20T13:04:23.000000Z'
                      updatedAt: '2024-08-20T13:04:23.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/1'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 1
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Flavie Adams'
                          email:
                            type: string
                            example: rgottlieb@example.net
                          isManager:
                            type: boolean
                            example: false
                          emailVerifiedAt:
                            type: string
                            example: '2024-08-20T13:04:22.000000Z'
                          createdAt:
                            type: string
                            example: '2024-08-20T13:04:23.000000Z'
                          updatedAt:
                            type: string
                            example: '2024-08-20T13:04:23.000000Z'
                          links:
                            type: object
                            properties:
                              self:
                                type: string
                                example: 'http://localhost/api/v1/authors/1'
      tags:
        - Endpoints
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the author.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/authors/{author_id}/tickets':
    get:
      summary: ''
      operationId: getApiV1AuthorsAuthor_idTickets
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: 'http://localhost/api/v1/authors/dicta/tickets?page=1'
                    last: 'http://localhost/api/v1/authors/dicta/tickets?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: null
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors/dicta/tickets?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/authors/dicta/tickets'
                    per_page: 15
                    to: null
                    total: 0
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/authors/dicta/tickets?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/authors/dicta/tickets?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors/dicta/tickets?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/authors/dicta/tickets'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - Endpoints
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        title:
                          type: string
                          description: "The ticket's title (method)."
                          example: No-example
                        description:
                          type: string
                          description: "The ticket's description."
                          example: No-example
                        status:
                          type: string
                          description: "The ticket's description."
                          example: No-example
                          enum:
                            - A
                            - C
                            - X
                            - H
                author:
                  type: integer
                  description: ''
                  example: 18
              required:
                - data
                - author
    parameters:
      -
        in: path
        name: author_id
        description: 'The ID of the author.'
        example: dicta
        required: true
        schema:
          type: string
  '/api/v1/authors/{author_id}/tickets/{id}':
    delete:
      summary: ''
      operationId: deleteApiV1AuthorsAuthor_idTicketsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: author_id
        description: 'The ID of the author.'
        example: rem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/authors/{author}/tickets/{ticket}':
    put:
      summary: ''
      operationId: putApiV1AuthorsAuthorTicketsTicket
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        title:
                          type: string
                          description: ''
                          example: non
                        description:
                          type: string
                          description: ''
                          example: 'Sint ab dolor quia corrupti voluptas voluptate minima.'
                        status:
                          type: string
                          description: ''
                          example: H
                          enum:
                            - A
                            - C
                            - X
                            - H
                    relationships:
                      type: object
                      description: ''
                      example: []
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 19
    patch:
      summary: ''
      operationId: patchApiV1AuthorsAuthorTicketsTicket
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        title:
                          type: string
                          description: ''
                          example: non
                        description:
                          type: string
                          description: ''
                          example: 'Ullam molestiae unde eaque beatae aut quidem exercitationem.'
                        status:
                          type: string
                          description: ''
                          example: A
                          enum:
                            - A
                            - C
                            - X
                            - H
                    relationships:
                      type: object
                      description: ''
                      example: []
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              properties:
                                id:
                                  type: string
                                  description: ''
                                  example: null
    parameters:
      -
        in: path
        name: author
        description: 'The author.'
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: ticket
        description: 'The ticket.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/tickets:
    get:
      summary: 'Get all tickets.'
      operationId: getAllTickets
      description: ''
      parameters:
        -
          in: query
          name: sort
          description: 'Data field(s) to sort by. Seprate multiple fields with a comma. Denote descending sort with a minus sign.'
          example: 'sort=title, -createdAt'
          required: false
          schema:
            type: string
            description: 'Data field(s) to sort by. Seprate multiple fields with a comma. Denote descending sort with a minus sign.'
            example: 'sort=title, -createdAt'
        -
          in: query
          name: 'filter[status]'
          description: 'Filter by status code: A, C, H.'
          example: null
          required: false
          schema:
            type: string
            description: 'Filter by status code: A, C, H.'
            example: null
        -
          in: query
          name: 'filter[title]'
          description: 'Filter by title. Wildcard characters are supported.'
          example: '*fix*'
          required: false
          schema:
            type: string
            description: 'Filter by title. Wildcard characters are supported.'
            example: '*fix*'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: ticket
                      id: 1
                      attributes:
                        title: 'ea autem ea'
                        status: A
                        createdAt: '2024-08-20T13:04:23.000000Z'
                        updatedAt: '2024-08-20T13:04:23.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                        links:
                          self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/1'
                    -
                      type: ticket
                      id: 2
                      attributes:
                        title: 'labore quasi provident'
                        status: H
                        createdAt: '2024-08-20T13:04:23.000000Z'
                        updatedAt: '2024-08-20T13:04:23.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 6
                        links:
                          self: 'http://localhost/api/v1/authors/6'
                      links:
                        self: 'http://localhost/api/v1/tickets/2'
                    -
                      type: ticket
                      id: 3
                      attributes:
                        title: 'non quod modi'
                        status: X
                        createdAt: '2024-08-20T13:04:23.000000Z'
                        updatedAt: '2024-08-20T13:04:23.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 6
                        links:
                          self: 'http://localhost/api/v1/authors/6'
                      links:
                        self: 'http://localhost/api/v1/tickets/3'
                    -
                      type: ticket
                      id: 4
                      attributes:
                        title: 'porro excepturi aut'
                        status: X
                        createdAt: '2024-08-20T13:04:23.000000Z'
                        updatedAt: '2024-08-20T13:04:23.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 6
                        links:
                          self: 'http://localhost/api/v1/authors/6'
                      links:
                        self: 'http://localhost/api/v1/tickets/4'
                    -
                      type: ticket
                      id: 5
                      attributes:
                        title: 'nulla et sunt'
                        status: C
                        createdAt: '2024-08-20T13:04:23.000000Z'
                        updatedAt: '2024-08-20T13:04:23.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 3
                        links:
                          self: 'http://localhost/api/v1/authors/3'
                      links:
                        self: 'http://localhost/api/v1/tickets/5'
                  links:
                    first: 'http://localhost/api/v1/tickets?page=1'
                    last: 'http://localhost/api/v1/tickets?page=21'
                    prev: null
                    next: 'http://localhost/api/v1/tickets?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 21
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://localhost/api/v1/tickets?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=4'
                        label: '4'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=5'
                        label: '5'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=6'
                        label: '6'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=7'
                        label: '7'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=8'
                        label: '8'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=9'
                        label: '9'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=10'
                        label: '10'
                        active: false
                      -
                        url: null
                        label: ...
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=20'
                        label: '20'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=21'
                        label: '21'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/tickets'
                    per_page: 5
                    to: 5
                    total: 101
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: ticket
                        id: 1
                        attributes:
                          title: 'ea autem ea'
                          status: A
                          createdAt: '2024-08-20T13:04:23.000000Z'
                          updatedAt: '2024-08-20T13:04:23.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/1'
                      -
                        type: ticket
                        id: 2
                        attributes:
                          title: 'labore quasi provident'
                          status: H
                          createdAt: '2024-08-20T13:04:23.000000Z'
                          updatedAt: '2024-08-20T13:04:23.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 6
                          links:
                            self: 'http://localhost/api/v1/authors/6'
                        links:
                          self: 'http://localhost/api/v1/tickets/2'
                      -
                        type: ticket
                        id: 3
                        attributes:
                          title: 'non quod modi'
                          status: X
                          createdAt: '2024-08-20T13:04:23.000000Z'
                          updatedAt: '2024-08-20T13:04:23.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 6
                          links:
                            self: 'http://localhost/api/v1/authors/6'
                        links:
                          self: 'http://localhost/api/v1/tickets/3'
                      -
                        type: ticket
                        id: 4
                        attributes:
                          title: 'porro excepturi aut'
                          status: X
                          createdAt: '2024-08-20T13:04:23.000000Z'
                          updatedAt: '2024-08-20T13:04:23.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 6
                          links:
                            self: 'http://localhost/api/v1/authors/6'
                        links:
                          self: 'http://localhost/api/v1/tickets/4'
                      -
                        type: ticket
                        id: 5
                        attributes:
                          title: 'nulla et sunt'
                          status: C
                          createdAt: '2024-08-20T13:04:23.000000Z'
                          updatedAt: '2024-08-20T13:04:23.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 3
                          links:
                            self: 'http://localhost/api/v1/authors/3'
                        links:
                          self: 'http://localhost/api/v1/tickets/5'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: ticket
                        id:
                          type: integer
                          example: 1
                        attributes:
                          type: object
                          properties:
                            title:
                              type: string
                              example: 'ea autem ea'
                            status:
                              type: string
                              example: A
                            createdAt:
                              type: string
                              example: '2024-08-20T13:04:23.000000Z'
                            updatedAt:
                              type: string
                              example: '2024-08-20T13:04:23.000000Z'
                        relationships:
                          type: object
                          properties:
                            author:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: user
                                    id:
                                      type: integer
                                      example: 1
                            links:
                              type: object
                              properties:
                                self:
                                  type: string
                                  example: 'http://localhost/api/v1/authors/1'
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'http://localhost/api/v1/tickets/1'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/tickets?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/tickets?page=21'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://localhost/api/v1/tickets?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 21
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://localhost/api/v1/tickets?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=3'
                            label: '3'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=4'
                            label: '4'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=5'
                            label: '5'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=6'
                            label: '6'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=7'
                            label: '7'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=8'
                            label: '8'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=9'
                            label: '9'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=10'
                            label: '10'
                            active: false
                          -
                            url: null
                            label: ...
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=20'
                            label: '20'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=21'
                            label: '21'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/tickets'
                      per_page:
                        type: integer
                        example: 5
                      to:
                        type: integer
                        example: 5
                      total:
                        type: integer
                        example: 101
      tags:
        - 'Managing Tickets'
    post:
      summary: 'Create a ticket.'
      operationId: createATicket
      description: 'Creates a new ticket. Users can only create tickets for themselves. Managers can create tickets for any user.'
      parameters: []
      responses: {  }
      tags:
        - 'Managing Tickets'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        title:
                          type: string
                          description: "The ticket's title (method)."
                          example: No-example
                        description:
                          type: string
                          description: "The ticket's description."
                          example: No-example
                        status:
                          type: string
                          description: "The ticket's description."
                          example: No-example
                          enum:
                            - A
                            - C
                            - X
                            - H
                    relationships:
                      type: object
                      description: ''
                      example: []
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              properties:
                                id:
                                  type: integer
                                  description: 'The author assigned to the ticket.'
                                  example: 0
              required:
                - data
tags:
  -
    name: Authentication
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: 'Managing Tickets'
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
